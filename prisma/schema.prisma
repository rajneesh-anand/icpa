
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model Order {
  id            Int     @default(autoincrement()) @id
  orderDate     DateTime  @default(now())  
  orderNumber   String @unique
  email         String
  name          String
  address       String?
  pincode       String?
  description   String?
  mobile        String?
  amount        String?
  discount      String?
  shipping      String?
  totalAmount   String?
  orderItem     String
  orderStatus   String?
  paymentId     String?
  paymentStatus String?
}




model Account {
  id                 String    @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  id         String   @id @default(cuid())
  identifier String?
  userId     String?
  token      String   @unique
  expires    DateTime?   
  user User? @relation(fields: [userId], references: [id])
  @@unique([identifier, token])
}


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String? 
  address       String?
  city          String?
  state         String?  
  mobile        String? @unique
  image         String?
  userType      String?  
  userStatus    String?
  createdAt     DateTime  @default(now()) @map(name: "created_at") 
  
  accounts      Account[]
  sessions      Session[]
  verificationTokens    VerificationToken[]
}
